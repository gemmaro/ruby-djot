# TypeProf 0.21.4

# Classes
module Djot
  VERSION: String

  def self.render_html: (untyped input) -> untyped
  def self.render_matches: (untyped input) -> untyped
  def self.render_ast: (untyped input) -> untyped

  module JavaScript
    PATH: Pathname
    VERSION: (Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?
    self.@context: MiniRacer::Context
    self.@source: String

    def self.source: -> String
    def self.context: -> MiniRacer::Context?
    def self.parse: (untyped input, ?source_positions: false) -> ((Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?)
    def self.render_ast: (untyped doc) -> ((Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?)
    def self.render_html: (untyped doc) -> ((Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?)
    def self.render_djot: (untyped doc, ?wrap_width: nil) -> ((Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?)
    def self.to_pandoc: (untyped doc) -> ((Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?)
    def self.from_pandoc: (untyped pandoc) -> ((Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?)
    def self.call: (String name, *Hash[String, false] args) -> ((Array[untyped] | Hash[untyped, untyped] | MiniRacer::JavaScriptFunction | Time)?)
  end

  module Lua
    LUA: untyped
    ROOT: Pathname

    def self.render_html: (untyped input) -> untyped
    def self.render_matches: (untyped input) -> untyped
    def self.render_ast: (untyped input) -> untyped
    def self.run_at_root: { (String) -> untyped } -> untyped
  end
end
